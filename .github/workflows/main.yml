on:
  push:
    branches:
      - feature/taj

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build artifacts
        run: |
          mkdir deployment
          cp ./app.py deployment/app.py
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: my-artifacts
          path: deployment

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine last release version
        id: last_release
        run: |
          response=$(curl --request GET --url https://api.github.com/repos/${{ github.repository }}/releases/latest)
          last_version=$(echo "$response" | jq -r '.tag_name')
          if [[ -z "$last_version" || "$last_version" == "null" ]]; then
            last_version="v1.0.-1"
          fi
          echo "::set-output name=last_version::$last_version"

      - name: Determine new version
        id: new_version
        run: |
          last_version=${{ steps.last_release.outputs.last_version }}
          if [[ $last_version == "v1.0.0" ]]; then
            new_version="v1.0.0"
          else
            IFS='.' read -ra version_parts <<< "$last_version"
            major=${version_parts[0]}
            minor=${version_parts[1]}
            patch=${version_parts[2]}
            patch=$((patch+1))
            new_version="${major}.${minor}.${patch}"
          fi
            echo "::set-output name=new_version::$new_version"
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifacts
          path: deployment

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: ${{ steps.new_version.outputs.new_version }}
          release_name: Release ${{ steps.new_version.outputs.new_version }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: deployment/app.py
          asset_name: app.py
          asset_content_type: text/x-python
